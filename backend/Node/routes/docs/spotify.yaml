paths:
  /spotify/login:
    get:
      tags:
        - Spotify
      summary: Oauth 2.0 for Spotify
      description: Actually go to the following link http://localhost:4000/spotify/login on a new tab and save the access_token somewhere, you'll need it for other endpoints

  /spotify/getMe:
    get:
      tags:
        - Spotify
      summary: Info about your spotify account
      description: Nothing much here, probably your Spotify display name, your image url if you have profile pic, etc.
      parameters:
        - name: access_token
          in: header
          required: false
          description: access_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: refresh_token
          in: header
          required: false
          description: refresh_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
      responses:
        '400':
          description: bad input
        '404':
          description: errors happened while getting data from spotify
        '204':
          description: user has empty body
        '200':
          description: successful! Return user json

  /spotify/getMyTopTracks:
    get:
      tags:
        - Spotify
      summary: Get your top tracks
      description: This endpoint will return a list of all your favorite tracks.
        Track is an object contains fields like who the artist is, what album does the track belong to, etc.
        This will likely be the form of the tracks returned from the ML server.
      parameters:
        - name: access_token
          in: header
          required: false
          description: access_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: refresh_token
          in: header
          required: false
          description: refresh_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
      responses:
        '400':
          description: bad input
        '404':
          description: errors happened while getting data from spotify
        '204':
          description: no tracks found, you gotta listen to more music man~
        '200':
          description: successful! Return list of tracks

  /spotify/createSpotifyPlaylist:
    post:
      tags:
        - Spotify
      summary: create a Spotify playlist
      description: let you create a spotify playlist with customized fields including name, public, and array of tracks for the playlist

      parameters:
        - name: access_token
          in: header
          required: false
          description: access_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: refresh_token
          in: header
          required: false
          description: refresh_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string

      requestBody:
        description: All fields are optional <br>
          name = name of the playlist <br>
          public = public or private playlist <br>
          trackIds = ids of all the tracks you wish to add to the playlist <br>
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Hello darkness my old friend'
                activity:
                  type: boolean
                  example: false
                trackIds:
                  type: array
                  example: ['4iV5W9uYEdYUVa79Axb7Rh', '1301WleyT98MSxVHPZCA6M']

      responses:
        '400':
          description: bad input
        '404':
          description: errors happened while performing Spotify API calls, could be due to poorly formatted/undefined input
        '200':
          description: playlist created successfully. Enjoy!
        '204':
          description: error creating playlist || no tracks were added to the playlist

  /spotify/getEuphonyPlaylistsByUser:
    get:
      tags:
        - Spotify
      summary: get Euphony playlists by user
      description: get all the user's playlists generated by euphony

      parameters:
        - name: userid
          in: header
          required: true
          description: userId for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: access_token
          in: header
          required: false
          description: access_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: refresh_token
          in: header
          required: false
          description: refresh_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string

      responses:
        '400':
          description: bad input
        '404':
          description: errors happened while performing Spotify API calls, could be due to poorly formatted/undefined input
        '200':
          description: Euphony playlists returned successfully. Enjoy!

  /spotify/deleteEuphonyPlaylistsByIds:
    delete:
      tags:
        - Spotify
      summary: remove Euphony playlists by playlist ids
      description: remove Euphony playlists from Postgres DB and from user's Spotify by playlist ids

      parameters:
        - name: userid
          in: header
          required: true
          description: userId for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: access_token
          in: header
          required: false
          description: access_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string
        - name: refresh_token
          in: header
          required: false
          description: refresh_token for spotify, get it from the spotify/login endpoint (PART OF HEADERS)
          schema:
            type: string

      requestBody:
        description: playlist ids
        content:
          application/json:
            schema:
              type: object
              properties:
                playlistIds:
                  type: array
                  example: ['5S1ETzPyZtyN9wVObmD6zb', '391Q0nSoedlyCYxfDZZqpT']

      responses:
        '400':
          description: bad input
        '404':
          description: errors happened while performing Spotify API calls, could be due to poorly formatted/undefined input
        '200':
          description: successfully removed the Euphony playlists!
